name: Tests and linters

on: 
  push:
      branches: [master]

jobs:
     test:
           runs-on: ubuntu-latest     

           services:
                postgres:
                  # Docker Hub image
                  image: postgres:latest
                  # service environment variables
                  # `POSTGRES_HOST` is `postgres`
                  env:
                    # optional (defaults to `postgres`)
                    POSTGRES_DB: photoview_db
                    # required
                    POSTGRES_PASSWORD: 8565
                    # optional (defaults to `5432`)
                    POSTGRES_HOST: 127.0.0.1
                    POSTGRES_PORT: 5432
                    # optional (defaults to `postgres`)
                    POSTGRES_USER: postgres
                  ports:
                    # maps tcp port 5432 on service container to the host
                    - 5432:5432
                  # set health checks to wait until postgres has started
                  options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
          
           steps:           
              
           - name: Repository checkout
             uses: actions/checkout@v4             
                      
           - name: Python setup
             uses: actions/setup-python@v4
             with:
               python-version: "3.11"
               
           - name: Execute dependencies
             run: pip install -r requirements.txt

           - name: Connect to PostgreSQL              
             run: |
                  sudo service postgresql start
                  sudo -u postgres createuser --superuser runner
                  python manage.py makemigrations api
                  python manage.py migrate
             
             
           - name: Run unit-tests
             run: pytest api/unit-tests.py

           - name: Run integrate-tests
             run:                    
                   pytest api/integrate-tests.py
           - name: Run linters checkout
             run: flake8 --config flake8.ini
    
         
     
